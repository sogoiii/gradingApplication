!= renderScriptsTags(myscripts)
script(src='/socket.io/socket.io.js')
script(src='/javascripts/jquery.jqplot.min.js')

script
	$(document).ready(function () {
		var socket = io.connect();
		socket.on('RPC_response', function(rpcresult){
		$('.ConfirmDone').text(rpcresult)
		$('#Spinner').spin(false);
		})
		socket.on('RPC_Print_response', function(rpcresult){
		$('.CreatedPDFID').text(rpcresult)	
		$('.ConfirmDone').text('Click the download file')
		$('a#PDFURL').prop('href', '/pdffile/' + rpcresult);
		$('#CreatePDFSpinner').spin(false);
		})
		$('#DeleteTest').on('show', function (event) {
			var test = $(this).data('modal').options.testid
			var user = $(this).data('modal').options.userid
			$('.confirmdelete').prop('action','/user/' + user + '/testdelete/' + test)
			$('.hiddentest').prop('value', test)
		});
		$('#DeleteClassModal').on('show', function (event) {
			var classid = $(this).data('modal').options.classid
			var user = $(this).data('modal').options.userid
			$('.confirmdelete').prop('action','/user/' + user + '/setupclass/')
			$('.hiddentest').prop('value', classid)
		});
		$('#UploadFileModal').on('show', function (event){
			var test = $(this).data('modal').options.testid
			var user = $(this).data('modal').options.userid
			$('.UploadFile').prop('action', '/user/' + user + '/tests/upload')
			$('.hiddentest').prop('value', test)
		});
		$('#GradingModal').on('show', function (event){
			var test = $(this).data('modal').options.testid
			var user = $(this).data('modal').options.userid
			$('#Spinner').spin({radius: 9, length: 7,className: 'Spinner'});
			socket.emit('RPC_request', {testid: test, userid: user});
		});
		$('#CreatePDF').on('show', function (event){
			var test = $(this).data('modal').options.testid
			var user = $(this).data('modal').options.userid
			$('#CreatePDFSpinner').spin({radius: 9, length: 7,className: 'Spinner'});
			socket.emit('RPC_PrintPDF', {testid: test, userid: user});
		});



		$('.editclass').click(function(e){
			var nam = $(this).closest('.row-fluid').find('.classnametext').text()             
			var sub = $(this).closest('.row-fluid').find('.subject').text()
			var gr = $(this).closest('.row-fluid').find('.grade').text()
			var nos = $(this).closest('.row-fluid').find('.NOS').text()
			$('.classname').val(nam)           
			$('.classsubject').val(sub)
			$('.classgrade').val(gr)
			$('.numberofstudents').val(nos)
			$('.submitform').text('Edit Class')
			var CRID = $(this).closest('.row-fluid').find('.classroomid').val()
			$('.Editing').prop('value', CRID)
			$('.reqtype').prop('value', 'PUT')
			//$('.createclass').append('<input type="hidden" name="_method" value="put" />')
		})
		$('.uploadfile').click(function(e){


		})



		$.fn.spin = function(opts) {
		this.each(function() {
		var $this = $(this),
		data = $this.data();
		if (data.spinner) {
		data.spinner.stop();
		delete data.spinner;
		}
		if (opts !== false) {
		data.spinner = new Spinner($.extend({color: $this.css('color')}, opts)).spin(this);
		}
		});
		return this;
		};






















		$.jqplot('chartdiv',  [[[1, 2],[3,5.12],[5,13.1],[7,33.6],[9,85.9],[11,219.9]]],
		{title:'Exponential Line',
		axes:{yaxis:{min:-10, max:240}},
		series:[{color:'#5FAB78',label: 'student grades'}],
		legend: {show: true,location: 'se'}
		});




		
		var dataRenderer2 = function(){
			var data = [[]];
			for (var i=0; i<13; i+=0.5) {
				data[0].push([i, Math.sin(i)]);
			}
			$('#sinedata').text(data);
			return data;
			}







		socket.emit('BuildStats_req');
		socket.on("BuildStats_res", function(stats){
			//- $.jqplot('chartdivsine',  [],
			//- {title:'Created Sine Data',
			//- series:[{color:'#5FAB78',label: 'student grades'}],
			//- legend: {show: true, location: 'se'},
			//- dataRenderer: dataRenderer2
			//- });


			//- var result = statRender(stats);
		//- 	//- var serverdata = $('#datareceived').text()
		//- 	//- $('#confirmreceived').text(serverdata);
		//- 	//- $.jqplot('chartdivtest',  [],
		//- 	//- {title:'Data from Server',
		//- 	//- series:[{color:'#5FAB78',label: 'student grades'}],
		//- 	//- legend: {show: true, location: 'se'}
		//- 	//- ,dataRenderer: statRender
		//- 	//- });
			//- socket.emit('getresults', 'tobi', function (somedata) {
				var somedata = stats;
				var data = [[]];
				for(i = 0; i < somedata.length;i++){
					data[0].push([i,somedata[i].CorrectlyAnswered])
				}
				$('#datareceived').text(data);
				$.jqplot('chartdivtest',  data,
				{title:'Data from Server',
				//- axes:{yaxis:{min:-1, max:3}},
				//- axes:{xaxis:{min:0, max:9}},
				series:[{color:'#5FAB78',label: 'student grades'}],
				legend: {show: true, location: 'se'}
				});
				//- return data;
				//- });




			}) //- end of socket.on
		







	      $('#INC3').click(function(){
        	var incomefound = GrabCalculatedValue();
            $('#BR3').prop('value', incomefound);
            $('#BR3').trigger('change');
          });

















		});//end of docment ready

